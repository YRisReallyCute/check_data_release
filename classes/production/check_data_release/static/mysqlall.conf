input {
    jdbc {
      # mysql 数据库链接,shop为数据库名
      jdbc_connection_string => "jdbc:mysql://localhost:3306/yy_data?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=true"
      # 用户名和密码
      jdbc_user => "cupid"
      jdbc_password => "mysql@chinark"
      # 驱动
      jdbc_driver_library => "/home/rsadmin/logstash/mysqletc/mysql-connector-java-5.1.42-bin.jar"
      # 驱动类名
      jdbc_driver_class => "com.mysql.jdbc.Driver"
	  
	  # jdbc_default_timezone => "Asia/Shanghai"
      #是否分页
      jdbc_paging_enabled => "true"
      jdbc_page_size => "50000"
      #直接执行sql语句
      statement =>"select * from zybz WHERE upd_time > :sql_last_value"
	  # 执行的sql 文件路径+名称
      # statement_filepath => "/hw/elasticsearch/logstash-6.2.4/bin/test.sql"
      #设置监听间隔  各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新
      schedule => "* * * * *"
      # 索引类型
      type => "zybz"
	  
	  clean_run => false
	  record_last_run => true
	  use_column_value => true
	  tracking_column => "upd_time"
	  tracking_column_type => timestamp
	  last_run_metadata_path => "D:\environment\ESALL\logstash\config\zybz_last_id"
    }
	
jdbc {
      # mysql 数据库链接,shop为数据库名
      jdbc_connection_string => "jdbc:mysql://localhost:3306/yy_data?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=true"
      # 用户名和密码
      jdbc_user => "cupid"
      jdbc_password => "mysql@chinark"
      # 驱动
      jdbc_driver_library => "/home/rsadmin/logstash/mysqletc/mysql-connector-java-5.1.42-bin.jar"
      # 驱动类名
      jdbc_driver_class => "com.mysql.jdbc.Driver"
	  
	  # jdbc_default_timezone => "Asia/Shanghai"
      #是否分页
      jdbc_paging_enabled => "true"
      jdbc_page_size => "50000"
      #直接执行sql语句
      statement =>"select * from zxcx WHERE upd_time > :sql_last_value"
	  # 执行的sql 文件路径+名称
      # statement_filepath => "/hw/elasticsearch/logstash-6.2.4/bin/test.sql"
      #设置监听间隔  各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新
      schedule => "* * * * *"
      # 索引类型
      type => "zxcx"
	  
	  clean_run => false
	  record_last_run => true
	  use_column_value => true
	  tracking_column => "upd_time"
	  tracking_column_type => timestamp
	  last_run_metadata_path => "D:\environment\ESALL\logstash\config\zxcx_last_id"
    }
	
jdbc {
      # mysql 数据库链接,shop为数据库名
      jdbc_connection_string => "jdbc:mysql://localhost:3306/yy_data?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=true"
      # 用户名和密码
      jdbc_user => "cupid"
      jdbc_password => "mysql@chinark"
      # 驱动
      jdbc_driver_library => "/home/rsadmin/logstash/mysqletc/mysql-connector-java-5.1.42-bin.jar"
      # 驱动类名
      jdbc_driver_class => "com.mysql.jdbc.Driver"
	  # jdbc_default_timezone => "Asia/Shanghai"
      #是否分页
      jdbc_paging_enabled => "true"
      jdbc_page_size => "50000"
      #直接执行sql语句
      statement =>"select * from ysjs WHERE upd_time > :sql_last_value"
	  # 执行的sql 文件路径+名称
      # statement_filepath => "/hw/elasticsearch/logstash-6.2.4/bin/test.sql"
      #设置监听间隔  各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新
      schedule => "* * * * *"
      # 索引类型
      type => "ysjs"
	  
	  clean_run => false
	  record_last_run => true
	  use_column_value => true
	  tracking_column => "upd_time"
	  tracking_column_type => timestamp
	  last_run_metadata_path => "D:\environment\ESALL\logstash\config\ysjs_last_id"
    }
	
	jdbc {
      # mysql 数据库链接,shop为数据库名
      jdbc_connection_string => "jdbc:mysql://localhost:3306/yy_data?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=true"
      # 用户名和密码
      jdbc_user => "cupid"
      jdbc_password => "mysql@chinark"
      # 驱动
      jdbc_driver_library => "/home/rsadmin/logstash/mysqletc/mysql-connector-java-5.1.42-bin.jar"
      # 驱动类名
      jdbc_driver_class => "com.mysql.jdbc.Driver"
	  
	  # jdbc_default_timezone => "Asia/Shanghai"
      #是否分页
      jdbc_paging_enabled => "true"
      jdbc_page_size => "50000"
      #直接执行sql语句
      # statement =>"select * from zybz WHERE upd_time > :sql_last_value"
	  # 执行的sql 文件路径+名称
      statement_filepath => "/home/rsadmin/logstash/mysqletc/patent.sql"
      #设置监听间隔  各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新
      schedule => "* * * * *"
      # 索引类型
      type => "patent"
	  
	  clean_run => false
	  record_last_run => true
	  use_column_value => true
	  tracking_column => "upd_time"
	  tracking_column_type => timestamp
	  last_run_metadata_path => "/home/rsadmin/logstash/config/patent_last_id"
    }
	
	jdbc {
      # mysql 数据库链接,shop为数据库名
      jdbc_connection_string => "jdbc:mysql://localhost:3306/yy_data?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=true"
      # 用户名和密码
      jdbc_user => "cupid"
      jdbc_password => "mysql@chinark"
      # 驱动
      jdbc_driver_library => "/home/rsadmin/logstash/mysqletc/mysql-connector-java-5.1.42-bin.jar"
      # 驱动类名
      jdbc_driver_class => "com.mysql.jdbc.Driver"
	  
	  # jdbc_default_timezone => "Asia/Shanghai"
      #是否分页
      jdbc_paging_enabled => "true"
      jdbc_page_size => "50000"
      #直接执行sql语句
      # statement =>"select * from zybz WHERE upd_time > :sql_last_value"
	  # 执行的sql 文件路径+名称
      statement_filepath => "/home/rsadmin/logstash/mysqletc/zyb.sql"
      #设置监听间隔  各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新
      schedule => "* * * * *"
      # 索引类型
      type => "diseaseZy"
	  
	  clean_run => false
	  record_last_run => true
	  use_column_value => true
	  tracking_column => "upd_time"
	  tracking_column_type => timestamp
	  last_run_metadata_path => "/home/rsadmin/logstash/config/diseaseZy_last_id"
    }
	
	jdbc {
      # mysql 数据库链接,shop为数据库名
      jdbc_connection_string => "jdbc:mysql://localhost:3306/yy_data?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=true"
      # 用户名和密码
      jdbc_user => "cupid"
      jdbc_password => "mysql@chinark"
      # 驱动
      jdbc_driver_library => "/home/rsadmin/logstash/mysqletc/mysql-connector-java-5.1.42-bin.jar"
      # 驱动类名
      jdbc_driver_class => "com.mysql.jdbc.Driver"
	  
	  # jdbc_default_timezone => "Asia/Shanghai"
      #是否分页
      jdbc_paging_enabled => "true"
      jdbc_page_size => "50000"
      #直接执行sql语句
      # statement =>"select * from zybz WHERE upd_time > :sql_last_value"
	  # 执行的sql 文件路径+名称
      statement_filepath => "/home/rsadmin/logstash/mysqletc/xyb.sql"
      #设置监听间隔  各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新
      schedule => "* * * * *"
      # 索引类型
      type => "diseaseXy"
	  
	  clean_run => false
	  record_last_run => true
	  use_column_value => true
	  tracking_column => "upd_time"
	  tracking_column_type => timestamp
	  last_run_metadata_path => "/home/rsadmin/logstash/config/diseaseXy_last_id"
    }

 
}
 
filter {
    json {
        source => "message"
        remove_field => ["message"]
    }
#ruby { 
#	code => "event.set('timestamp', event.get('@timestamp').time.localtime + 8*60*60)" 
#	}
#
#	ruby{
#	code => "event.set('day', (event.get('@timestamp').time.localtime + 8*60*60).strftime('%Y.%m.%d'))"
#	}
}
 
output {
	if[type] == "zxcx"{
		elasticsearch {
			#es的ip和端口
			hosts => ["http://localhost:9200"]
			#ES索引名称（自己定义的）
			index => "zxcx"
			#文档类型
			document_type => "doc"
			#设置数据的id为数据库中的字段
			document_id => "%{zxbh}"
		}
		stdout {
			codec => json_lines
		}
	}
	
	if[type] == "zybz"{
		elasticsearch {
			#es的ip和端口
			hosts => ["http://localhost:9200"]
			#ES索引名称（自己定义的）
			index => "zybz1"
			#文档类型
			document_type => "doc"
			#设置数据的id为数据库中的字段
			document_id => "%{id}"
		}
		stdout {
			codec => json_lines
		}
	}
	
	if[type] == "ysjs"{
		elasticsearch {
			#es的ip和端口
			hosts => ["http://localhost:9200"]
			#ES索引名称（自己定义的）
			index => "ysjs"
			#文档类型
			document_type => "doc"
			#设置数据的id为数据库中的字段
			document_id => "%{id}"
		}
		stdout {
			codec => json_lines
		}
	}
	
	if[type] == "patent"{
		elasticsearch {
			#es的ip和端口
			hosts => ["http://localhost:9200"]
			#ES索引名称（自己定义的）
			index => "patent_data"
			#文档类型
			document_type => "doc"
			#设置数据的id为数据库中的字段
			document_id => "%{id}"
		}
		stdout {
			codec => json_lines
		}
	}
	
	if[type] == "diseaseZy"{
		elasticsearch {
			#es的ip和端口
			hosts => ["http://localhost:9200"]
			#ES索引名称（自己定义的）
			index => "disease_zy"
			#文档类型
			document_type => "doc"
			#设置数据的id为数据库中的字段
			document_id => "%{id}"
		}
		stdout {
			codec => json_lines
		}
	}
	
	if[type] == "diseaseXy"{
		elasticsearch {
			#es的ip和端口
			hosts => ["http://localhost:9200"]
			#ES索引名称（自己定义的）
			index => "disease_xy"
			#文档类型
			document_type => "doc"
			#设置数据的id为数据库中的字段
			document_id => "%{id}"
		}
		stdout {
			codec => json_lines
		}
	}

}
 